class Solution(object):
    def regionsBySlashes(self, grid):
        """
        :type grid: List[str]
        :rtype: int
        """

        n = len(grid)

        matrix = [[0] * (n * 3) for _ in range(n * 3)]
        def dfs(x, y):
            if x < 0 or x >= n * 3 or y < 0 or y >= n * 3 or matrix[x][y]:
                return
            matrix[x][y] = 1
            dfs(x-1,y)
            dfs(x+1,y)
            dfs(x,y-1)
            dfs(x,y+1)
                
                
        for i in range(n):
            for j in range(n):
                if grid[i][j] == '/':
                    matrix[3*i+2][3*j] = 1
                    matrix[3*i+1][3*j+1] = 1
                    matrix[3*i][3*j+2] = 1
                elif grid[i][j] == '\\':
                    matrix[3*i][3*j] = 1
                    matrix[3*i+1][3*j+1] = 1
                    matrix[3*i+2][3*j+2] = 1
        
        ans = 0
        for i in range(n*3):
            for j in range(n*3):
                if(matrix[i][j] == 0):
                    dfs(i, j)
                    ans += 1
        return ans
