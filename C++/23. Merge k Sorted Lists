/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

    ListNode* merge(ListNode* list1, ListNode* list2){
        ListNode* dummy = new ListNode(0);
        ListNode* point = dummy;

        while(list1 && list2){
            if(list1->val > list2->val){
                point->next = list2;
                list2 = list2->next;
            }
            else{
                point->next = list1;
                list1 = list1->next;
            }  
            point = point->next;
        }
        if(list1) point->next = list1;
        else if(list2) point->next = list2;

        return dummy->next;
    }

    ListNode* mergeKLists(vector<ListNode*>& lists) {
        
        if(lists.empty())return nullptr;

        ListNode* ans = lists[0];

        for(int i = 1;i < lists.size();i++)
            ans = merge(ans, lists[i]);

        return ans;
    }
};
