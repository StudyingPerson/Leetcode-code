/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ans = new ListNode(0);
        ListNode* tail = ans;

        int add = 0;

        while(l1 != nullptr or l2 != nullptr or add){

            int tmp = add;

            if(l1 != nullptr)
                tmp += l1->val;
            if(l2!= nullptr)
                tmp += l2->val;

            add = tmp / 10;
            tmp = tmp % 10;

            ListNode* newNode = new ListNode(tmp);
            tail->next = newNode;
            tail = tail->next;

            l1 = (l1 != nullptr) ? l1->next : l1;
            l2 = (l2 != nullptr) ? l2->next : l2;

        }
        return ans->next;
    }
};
